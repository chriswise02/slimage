{"version":3,"file":"static/js/908.7d7f600c.chunk.js","mappings":"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","sources":["../node_modules/@jsquash/png/codec/pkg/squoosh_png.js","../node_modules/@jsquash/png/encode.js"],"sourcesContent":["let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedUint8ClampedMemory0 = null;\n\nfunction getUint8ClampedMemory0() {\n    if (cachedUint8ClampedMemory0 === null || cachedUint8ClampedMemory0.byteLength === 0) {\n        cachedUint8ClampedMemory0 = new Uint8ClampedArray(wasm.memory.buffer);\n    }\n    return cachedUint8ClampedMemory0;\n}\n\nfunction getClampedArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ClampedMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} data\n* @param {number} width\n* @param {number} height\n* @param {number} bit_depth\n* @returns {Uint8Array}\n*/\nexport function encode(data, width, height, bit_depth) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.encode(retptr, ptr0, len0, width, height, bit_depth);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Uint8Array} data\n* @returns {ImageData}\n*/\nexport function decode(data) {\n    const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.decode(ptr0, len0);\n    return takeObject(ret);\n}\n\n/**\n* @param {Uint8Array} data\n* @returns {ImageDataRGBA16}\n*/\nexport function decode_rgba16(data) {\n    const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.decode_rgba16(ptr0, len0);\n    return ImageDataRGBA16.__wrap(ret);\n}\n\n/**\n*/\nexport class ImageDataRGBA16 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ImageDataRGBA16.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_imagedatargba16_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get width() {\n        const ret = wasm.imagedatargba16_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get height() {\n        const ret = wasm.imagedatargba16_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {Uint16Array}\n    */\n    get data() {\n        const ret = wasm.imagedatargba16_data(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_a448f833075b71ba = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_099217381c451830 = function(arg0, arg1, arg2) {\n        const ret = new Uint16Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_newwithownedu8clampedarrayandsh_91db5987993a08fb = function(arg0, arg1, arg2, arg3) {\n        var v0 = getClampedArrayU8FromWasm0(arg0, arg1).slice();\n        wasm.__wbindgen_free(arg0, arg1 * 1, 1);\n        const ret = new ImageData(v0, arg2 >>> 0, arg3 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n    cachedUint8ClampedMemory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('squoosh_png_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\nconst isServiceWorker = globalThis.ServiceWorkerGlobalScope !== undefined;\nconst isRunningInCloudFlareWorkers = isServiceWorker && typeof self !== 'undefined' && globalThis.caches && globalThis.caches.default !== undefined;\nconst isRunningInNode = typeof process === 'object' && process.release && process.release.name === 'node';\n\nif (isRunningInCloudFlareWorkers || isRunningInNode) {\n  if (!globalThis.ImageData) {\n    // Simple Polyfill for ImageData Object\n    globalThis.ImageData = class ImageData {\n      constructor(data, width, height) {\n        this.data = data;\n        this.width = width;\n        this.height = height;\n      }\n    };\n  }\n\n  if (import.meta.url === undefined) {\n    import.meta.url = 'https://localhost';\n  }\n\n  if (typeof self !== 'undefined' && self.location === undefined) {\n    self.location = { href: '' };\n  }\n}\n","/**\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport initPngModule, { encode as pngEncode } from './codec/pkg/squoosh_png.js';\nlet pngModule;\nexport async function init(moduleOrPath) {\n    if (!pngModule) {\n        pngModule = initPngModule(moduleOrPath);\n    }\n    return pngModule;\n}\nexport default async function encode(data, options = {}) {\n    var _a;\n    await init();\n    const bitDepth = (_a = options === null || options === void 0 ? void 0 : options.bitDepth) !== null && _a !== void 0 ? _a : 8;\n    if (bitDepth !== 8 && bitDepth !== 16) {\n        throw new Error('Invalid bit depth. Must be either 8 or 16.');\n    }\n    const isUint16Array = data.data instanceof Uint16Array;\n    if (isUint16Array && bitDepth !== 16) {\n        throw new Error('Invalid bit depth, must be 16 for Uint16Array or manually convert to RGB8 values with Uint8Array.');\n    }\n    if (!isUint16Array && bitDepth === 16) {\n        throw new Error('Invalid bit depth, must be 8 for Uint8Array or manually convert to RGB16 values with Uint16Array.');\n    }\n    const encodeData = new Uint8Array(data.data.buffer);\n    const output = await pngEncode(encodeData, data.width, data.height, bitDepth);\n    if (!output)\n        throw new Error('Encoding error.');\n    return output.buffer;\n}\n"],"names":["wasm","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","cachedUint8ClampedMemory0","getClampedArrayU8FromWasm0","ptr","len","Uint8ClampedArray","subarray","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","set","cachedInt32Memory0","getInt32Memory0","Int32Array","encode","data","width","height","bit_depth","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","len0","r0","r1","v2","slice","__wbindgen_free","__wbg_get_imports","imports","wbg","__wbindgen_memory","__wbg_buffer_a448f833075b71ba","arg0","__wbg_newwithbyteoffsetandlength_099217381c451830","arg1","arg2","Uint16Array","__wbindgen_object_drop_ref","__wbg_newwithownedu8clampedarrayandsh_91db5987993a08fb","arg3","v0","ImageData","__wbindgen_throw","__wbg_finalize_init","instance","module","exports","__wbg_init","__wbindgen_wasm_module","async","input","URL","Request","fetch","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","__wbg_load","isRunningInCloudFlareWorkers","globalThis","ServiceWorkerGlobalScope","self","caches","default","isRunningInNode","process","release","name","pngModule","options","arguments","_a","moduleOrPath","initPngModule","init","bitDepth","isUint16Array","encodeData","output","pngEncode","constructor","this","location","href"],"sourceRoot":""}